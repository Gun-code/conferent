{"version":3,"file":"index-D-wSvsMw.js","sources":["../../src/api/user/ApiClient.js","../../src/pages/users/index.vue"],"sourcesContent":["import apiClient from '@/api/ApiClient';\r\n\r\n/**\r\n * User API 클라이언트\r\n * 사용자 관리 API\r\n */\r\nexport const userApiClient = {\r\n  /**\r\n   * 모든 사용자 목록 조회\r\n   * GET /api/users\r\n   * @returns {Promise<Array>} 사용자 목록\r\n   */\r\n  getAllUsers: () => apiClient.get('/api/users'),\r\n\r\n  /**\r\n   * ID로 사용자 조회\r\n   * GET /api/users/{id}\r\n   * @param {number} id - 사용자 ID\r\n   * @returns {Promise<Object>} 사용자 정보\r\n   */\r\n  getUserById: (id) => apiClient.get(`/api/users/${id}`),\r\n\r\n  /**\r\n   * 이메일로 사용자 조회\r\n   * GET /api/users/email/{email}\r\n   * @param {string} email - 사용자 이메일\r\n   * @returns {Promise<Object>} 사용자 정보\r\n   */\r\n  getUserByEmail: (email) => apiClient.get(`/api/users/email/${email}`),\r\n\r\n  /**\r\n   * 사용자 생성\r\n   * POST /api/users\r\n   * @param {Object} userData - 사용자 생성 데이터\r\n   * @param {string} userData.name - 사용자 이름\r\n   * @param {string} userData.email - 이메일\r\n   * @param {string} userData.password - 비밀번호\r\n   * @param {string} userData.role - 역할 (USER/ADMIN)\r\n   * @returns {Promise<Object>} 생성된 사용자 정보\r\n   */\r\n  createUser: (userData) => apiClient.post('/api/users', userData),\r\n\r\n  /**\r\n   * 사용자 수정\r\n   * PUT /api/users/{id}\r\n   * @param {number} id - 사용자 ID\r\n   * @param {Object} userData - 수정할 사용자 데이터\r\n   * @returns {Promise<Object>} 수정된 사용자 정보\r\n   */\r\n  updateUser: (id, userData) => apiClient.put(`/api/users/${id}`, userData),\r\n\r\n  /**\r\n   * 사용자 삭제\r\n   * DELETE /api/users/{id}\r\n   * @param {number} id - 사용자 ID\r\n   * @returns {Promise<void>}\r\n   */\r\n  deleteUser: (id) => apiClient.delete(`/api/users/${id}`),\r\n\r\n  /**\r\n   * 역할별 사용자 조회\r\n   * GET /api/users/role/{role}\r\n   * @param {string} role - 역할 (USER/ADMIN)\r\n   * @returns {Promise<Array>} 조건에 맞는 사용자 목록\r\n   */\r\n  getUsersByRole: (role) => apiClient.get(`/api/users/role/${role}`),\r\n\r\n  /**\r\n   * 사용자 존재 여부 확인\r\n   * GET /api/users/{id}/exists\r\n   * @param {number} id - 사용자 ID\r\n   * @returns {Promise<boolean>} 존재 여부\r\n   */\r\n  existsUser: (id) => apiClient.get(`/api/users/${id}/exists`),\r\n\r\n  /**\r\n   * 이메일 중복 확인\r\n   * GET /api/users/email/{email}/exists\r\n   * @param {string} email - 이메일\r\n   * @returns {Promise<boolean>} 중복 여부\r\n   */\r\n  existsEmail: (email) => apiClient.get(`/api/users/email/${email}/exists`)\r\n}; ","<template>\r\n  <UserLayout>\r\n    <div class=\"user-list\">\r\n      <div class=\"user-list__header\">\r\n        <h1 class=\"user-list__title\">사용자 목록</h1>\r\n        <BaseButton \r\n          variant=\"primary\" \r\n          @click=\"handleCreateUser\"\r\n        >\r\n          사용자 추가\r\n        </BaseButton>\r\n      </div>\r\n\r\n      <div class=\"user-list__filters\">\r\n        <div class=\"user-list__filter-group\">\r\n          <label for=\"role-filter\" class=\"user-list__filter-label\">역할</label>\r\n          <select \r\n            id=\"role-filter\" \r\n            v-model=\"filters.role\"\r\n            class=\"user-list__filter-select\"\r\n            @change=\"handleFilterChange\"\r\n          >\r\n            <option value=\"\">전체</option>\r\n            <option value=\"USER\">일반 사용자</option>\r\n            <option value=\"ADMIN\">관리자</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"user-list__filter-group\">\r\n          <label for=\"search-filter\" class=\"user-list__filter-label\">검색</label>\r\n          <input\r\n            id=\"search-filter\"\r\n            v-model=\"filters.search\"\r\n            type=\"text\"\r\n            class=\"user-list__filter-input\"\r\n            placeholder=\"이름 또는 이메일 검색\"\r\n            @input=\"handleFilterChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"user-list__loading\">\r\n        <p>사용자 목록을 불러오는 중...</p>\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"user-list__error\">\r\n        <p>{{ error }}</p>\r\n        <BaseButton \r\n          variant=\"primary\" \r\n          @click=\"loadUsers\"\r\n        >\r\n          다시 시도\r\n        </BaseButton>\r\n      </div>\r\n\r\n      <div v-else-if=\"filteredUsers.length === 0\" class=\"user-list__empty\">\r\n        <p>조건에 맞는 사용자가 없습니다.</p>\r\n      </div>\r\n\r\n      <div v-else class=\"user-list__grid\">\r\n        <div \r\n          v-for=\"user in filteredUsers\" \r\n          :key=\"user.id\"\r\n          class=\"user-card\"\r\n        >\r\n          <div class=\"user-card__avatar\">\r\n            {{ getInitials(user.name) }}\r\n          </div>\r\n          \r\n          <div class=\"user-card__content\">\r\n            <div class=\"user-card__header\">\r\n              <h3 class=\"user-card__name\">{{ user.name }}</h3>\r\n              <span :class=\"getRoleClass(user.role)\">\r\n                {{ getRoleText(user.role) }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"user-card__info\">\r\n              <p class=\"user-card__email\">{{ user.email }}</p>\r\n              <p v-if=\"user.department\" class=\"user-card__department\">\r\n                {{ user.department }}\r\n              </p>\r\n              <p class=\"user-card__joined\">\r\n                가입일: {{ formatDate(user.createdAt) }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"user-card__actions\">\r\n            <BaseButton \r\n              variant=\"primary\" \r\n              size=\"small\"\r\n              @click=\"handleViewUser(user)\"\r\n            >\r\n              상세보기\r\n            </BaseButton>\r\n            <BaseButton \r\n              variant=\"secondary\" \r\n              size=\"small\"\r\n              @click=\"handleEditUser(user)\"\r\n            >\r\n              수정\r\n            </BaseButton>\r\n            <BaseButton \r\n              variant=\"danger\" \r\n              size=\"small\"\r\n              @click=\"handleDeleteUser(user)\"\r\n            >\r\n              삭제\r\n            </BaseButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </UserLayout>\r\n</template>\r\n\r\n<script>\r\nimport UserLayout from '@/layouts/UserLayout.vue'\r\nimport BaseButton from '@/components/base/BaseButton.vue'\r\nimport { userApiClient } from '@/api'\r\nimport { formatDate } from '@/utils/date'\r\n\r\nexport default {\r\n  name: 'UserList',\r\n  components: {\r\n    UserLayout,\r\n    BaseButton\r\n  },\r\n  data() {\r\n    return {\r\n      users: [],\r\n      loading: false,\r\n      error: null,\r\n      filters: {\r\n        role: '',\r\n        search: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    filteredUsers() {\r\n      let filtered = [...this.users]\r\n      \r\n      if (this.filters.role) {\r\n        filtered = filtered.filter(user => \r\n          user.role === this.filters.role\r\n        )\r\n      }\r\n      \r\n      if (this.filters.search) {\r\n        const search = this.filters.search.toLowerCase()\r\n        filtered = filtered.filter(user => \r\n          user.name.toLowerCase().includes(search) ||\r\n          user.email.toLowerCase().includes(search)\r\n        )\r\n      }\r\n      \r\n      return filtered.sort((a, b) => a.name.localeCompare(b.name))\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadUsers()\r\n  },\r\n  methods: {\r\n    async loadUsers() {\r\n      this.loading = true\r\n      this.error = null\r\n      \r\n      try {\r\n        const response = await userApiClient.getAllUsers()\r\n        this.users = response.data\r\n      } catch (err) {\r\n        this.error = '사용자 목록을 불러오는데 실패했습니다.'\r\n        console.error('Failed to load users:', err)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    handleFilterChange() {\r\n      // 필터 변경 시 추가 로직이 필요한 경우 여기에 구현\r\n    },\r\n    \r\n    formatDate(dateString) {\r\n      return formatDate(dateString, 'date')\r\n    },\r\n    \r\n    getInitials(name) {\r\n      if (!name) return '?'\r\n      return name.split(' ').map(n => n[0]).join('').toUpperCase()\r\n    },\r\n    \r\n    getRoleClass(role) {\r\n      const classes = {\r\n        USER: 'role-user',\r\n        ADMIN: 'role-admin'\r\n      }\r\n      return `user-card__role ${classes[role] || ''}`\r\n    },\r\n    \r\n    getRoleText(role) {\r\n      const texts = {\r\n        USER: '일반 사용자',\r\n        ADMIN: '관리자'\r\n      }\r\n      return texts[role] || role\r\n    },\r\n    \r\n    handleCreateUser() {\r\n      this.$router.push('/users/create')\r\n    },\r\n    \r\n    handleViewUser(user) {\r\n      this.$router.push(`/users/${user.id}`)\r\n    },\r\n    \r\n    handleEditUser(user) {\r\n      this.$router.push(`/users/${user.id}/edit`)\r\n    },\r\n    \r\n    async handleDeleteUser(user) {\r\n      if (confirm(`정말로 \"${user.name}\" 사용자를 삭제하시겠습니까?`)) {\r\n        try {\r\n          await userApiClient.deleteUser(user.id)\r\n          this.users = this.users.filter(u => u.id !== user.id)\r\n        } catch (err) {\r\n          alert('사용자 삭제에 실패했습니다.')\r\n          console.error('Failed to delete user:', err)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/styles/pages/users.css';\r\n</style> "],"names":["userApiClient","apiClient","id","email","userData","role","_sfc_main","UserLayout","BaseButton","filtered","user","search","a","b","response","err","dateString","formatDate","name","n","u","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_17","_hoisted_18","_createBlock","_component_UserLayout","_createElementVNode","_cache","_createVNode","_component_BaseButton","$options","$event","$data","args","_vModelSelect","_vModelText","_openBlock","_createElementBlock","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","_toDisplayString","_normalizeClass","_hoisted_16"],"mappings":"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"}