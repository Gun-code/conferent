{"version":3,"mappings":"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","names":["_sfc_main","_hoisted_1","_openBlock","_createElementBlock","_createVNode","_component_router_view","token","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_13","_hoisted_14","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_createElementVNode","_component_router_link","_cache","$data","$event","$options","args","_hoisted_12","_hoisted_15","_toDisplayString","_hoisted_20","_renderSlot","_ctx","apiClient","axios","config","userId","error","response","_a","roomApiClient","id","roomData","minCapacity","location","rentApiClient","rentData","creatorId","startDate","endDate","fromTime","purpose","roomId","conflictData","roomRentApiClient","roomRentData","rentId","UserLayout","err","roomsResponse","today","tomorrow","reservationsResponse","_c","_b","dateString","status","room","_hoisted_27","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_createBlock","_component_UserLayout","_Fragment","_renderList","_createTextVNode","_withModifiers","reservation","_normalizeClass","routes","Home","__vitePreload","router","createRouter","createWebHistory","to","from","savedPosition","next","requiresAuth","record","requiresAdmin","isAuthenticated","isAdmin","clickOutside","el","binding","event","app","createApp","App","pinia","createPinia","date","format","d"],"ignoreList":[],"sources":["../../src/App.vue","../../src/layouts/UserLayout.vue","../../src/api/ApiClient.js","../../src/api/room/ApiClient.js","../../src/api/rent/ApiClient.js","../../src/api/roomrent/ApiClient.js","../../src/pages/Home.vue","../../src/router/index.js","../../src/directives/clickOutside.js","../../src/main.js"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <router-view />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App'\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 전역 스타일 */\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background-color: #f9fafb;\r\n  color: #1f2937;\r\n}\r\n\r\n#app {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* 스크롤바 스타일링 */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: #c1c1c1;\r\n  border-radius: 4px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #a8a8a8;\r\n}\r\n\r\n/* 포커스 스타일 */\r\n:focus {\r\n  outline: 2px solid #3b82f6;\r\n  outline-offset: 2px;\r\n}\r\n\r\n/* 링크 스타일 */\r\na {\r\n  color: #3b82f6;\r\n  text-decoration: none;\r\n}\r\n\r\na:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* 버튼 기본 스타일 리셋 */\r\nbutton {\r\n  font-family: inherit;\r\n}\r\n\r\n/* 입력 필드 기본 스타일 */\r\ninput, textarea, select {\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n}\r\n\r\n/* 유틸리티 클래스 */\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  border: 0;\r\n}\r\n\r\n.text-center {\r\n  text-align: center;\r\n}\r\n\r\n.text-left {\r\n  text-align: left;\r\n}\r\n\r\n.text-right {\r\n  text-align: right;\r\n}\r\n\r\n.flex {\r\n  display: flex;\r\n}\r\n\r\n.flex-col {\r\n  flex-direction: column;\r\n}\r\n\r\n.items-center {\r\n  align-items: center;\r\n}\r\n\r\n.justify-center {\r\n  justify-content: center;\r\n}\r\n\r\n.justify-between {\r\n  justify-content: space-between;\r\n}\r\n\r\n.gap-1 {\r\n  gap: 0.25rem;\r\n}\r\n\r\n.gap-2 {\r\n  gap: 0.5rem;\r\n}\r\n\r\n.gap-4 {\r\n  gap: 1rem;\r\n}\r\n\r\n.mt-4 {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.mb-4 {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.p-4 {\r\n  padding: 1rem;\r\n}\r\n\r\n.rounded {\r\n  border-radius: 0.375rem;\r\n}\r\n\r\n.shadow {\r\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\r\n}\r\n\r\n.bg-white {\r\n  background-color: #ffffff;\r\n}\r\n\r\n.border {\r\n  border: 1px solid #e5e7eb;\r\n}\r\n</style> ","<template>\r\n  <div class=\"user-layout\">\r\n    <!-- 상단 헤더 -->\r\n    <header class=\"user-header\">\r\n      <div class=\"user-header__container\">\r\n        <div class=\"user-header__left\">\r\n          <router-link to=\"/\" class=\"user-header__logo\">\r\n            <h1 class=\"user-header__title\">Conferent</h1>\r\n          </router-link>\r\n        </div>\r\n        \r\n        <nav class=\"user-header__nav\">\r\n          <ul class=\"user-header__menu\">\r\n            <li class=\"user-header__menu-item\">\r\n              <router-link \r\n                to=\"/\" \r\n                class=\"user-header__menu-link\"\r\n                active-class=\"user-header__menu-link--active\"\r\n              >\r\n                홈\r\n              </router-link>\r\n            </li>\r\n            <li class=\"user-header__menu-item\">\r\n              <router-link \r\n                to=\"/rooms\" \r\n                class=\"user-header__menu-link\"\r\n                active-class=\"user-header__menu-link--active\"\r\n              >\r\n                회의실\r\n              </router-link>\r\n            </li>\r\n            <li class=\"user-header__menu-item\">\r\n              <router-link \r\n                to=\"/reservations\" \r\n                class=\"user-header__menu-link\"\r\n                active-class=\"user-header__menu-link--active\"\r\n              >\r\n                내 예약\r\n              </router-link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        \r\n        <div class=\"user-header__right\">\r\n          <div class=\"user-header__search\">\r\n            <input\r\n              v-model=\"searchQuery\"\r\n              type=\"text\"\r\n              placeholder=\"회의실 검색...\"\r\n              class=\"user-header__search-input\"\r\n              @keyup.enter=\"handleSearch\"\r\n            />\r\n            <button \r\n              class=\"user-header__search-btn\"\r\n              @click=\"handleSearch\"\r\n            >\r\n              🔍\r\n            </button>\r\n          </div>\r\n          \r\n          <div v-if=\"isAuthenticated\" class=\"user-header__user\">\r\n            <div class=\"user-header__notifications\">\r\n              <button class=\"user-header__notification-btn\">\r\n                🔔\r\n                <span v-if=\"notificationCount > 0\" class=\"user-header__notification-badge\">\r\n                  {{ notificationCount }}\r\n                </span>\r\n              </button>\r\n            </div>\r\n            \r\n            <div class=\"user-header__user-menu\">\r\n              <button class=\"user-header__user-menu-btn\">\r\n                <span class=\"user-header__user-avatar\">👤</span>\r\n                <span class=\"user-header__user-name\">{{ userName }}</span>\r\n                <span class=\"user-header__user-arrow\">▼</span>\r\n              </button>\r\n              <div class=\"user-header__user-dropdown\">\r\n                <router-link to=\"/profile\" class=\"user-header__user-dropdown-item\">\r\n                  프로필\r\n                </router-link>\r\n                <router-link to=\"/settings\" class=\"user-header__user-dropdown-item\">\r\n                  설정\r\n                </router-link>\r\n                <a href=\"#\" class=\"user-header__user-dropdown-item\" @click=\"handleLogout\">\r\n                  로그아웃\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div v-else class=\"user-header__auth\">\r\n            <router-link \r\n              to=\"/login\" \r\n              class=\"user-header__auth-btn user-header__auth-btn--login\"\r\n            >\r\n              로그인\r\n            </router-link>\r\n            <router-link \r\n              to=\"/register\" \r\n              class=\"user-header__auth-btn user-header__auth-btn--register\"\r\n            >\r\n              회원가입\r\n            </router-link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- 메인 콘텐츠 -->\r\n    <main class=\"user-main\">\r\n      <slot></slot>\r\n    </main>\r\n\r\n    <!-- 하단 푸터 -->\r\n    <footer class=\"user-footer\">\r\n      <div class=\"user-footer__container\">\r\n        <div class=\"user-footer__content\">\r\n          <div class=\"user-footer__section\">\r\n            <h3 class=\"user-footer__title\">Conferent</h3>\r\n            <p class=\"user-footer__description\">\r\n              효율적인 회의실 예약 관리 시스템으로 더 나은 업무 환경을 제공합니다.\r\n            </p>\r\n          </div>\r\n          \r\n          <div class=\"user-footer__section\">\r\n            <h4 class=\"user-footer__subtitle\">서비스</h4>\r\n            <ul class=\"user-footer__links\">\r\n              <li><router-link to=\"/rooms\" class=\"user-footer__link\">회의실 예약</router-link></li>\r\n              <li><router-link to=\"/reservations\" class=\"user-footer__link\">예약 관리</router-link></li>\r\n              <li><a href=\"#\" class=\"user-footer__link\">사용 가이드</a></li>\r\n              <li><a href=\"#\" class=\"user-footer__link\">FAQ</a></li>\r\n            </ul>\r\n          </div>\r\n          \r\n          <div class=\"user-footer__section\">\r\n            <h4 class=\"user-footer__subtitle\">지원</h4>\r\n            <ul class=\"user-footer__links\">\r\n              <li><a href=\"#\" class=\"user-footer__link\">고객센터</a></li>\r\n              <li><a href=\"#\" class=\"user-footer__link\">문의하기</a></li>\r\n              <li><a href=\"#\" class=\"user-footer__link\">개인정보처리방침</a></li>\r\n              <li><a href=\"#\" class=\"user-footer__link\">이용약관</a></li>\r\n            </ul>\r\n          </div>\r\n          \r\n          <div class=\"user-footer__section\">\r\n            <h4 class=\"user-footer__subtitle\">연락처</h4>\r\n            <div class=\"user-footer__contact\">\r\n              <p>📧 support@conferent.com</p>\r\n              <p>📞 02-1234-5678</p>\r\n              <p>📍 서울특별시 동작구 노량진로 188</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"user-footer__bottom\">\r\n          <p class=\"user-footer__copyright\">\r\n            © 2024 Conferent. All rights reserved.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'UserLayout',\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      isAuthenticated: false,\r\n      userName: '사용자',\r\n      notificationCount: 2\r\n    }\r\n  },\r\n  mounted() {\r\n    // 인증 상태 확인\r\n    this.checkAuthStatus()\r\n  },\r\n  methods: {\r\n    checkAuthStatus() {\r\n      const token = localStorage.getItem('token')\r\n      this.isAuthenticated = !!token\r\n      \r\n      if (this.isAuthenticated) {\r\n        // 실제로는 API에서 사용자 정보를 가져와야 함\r\n        this.userName = '홍길동'\r\n      }\r\n    },\r\n    \r\n    handleSearch() {\r\n      if (this.searchQuery.trim()) {\r\n        this.$router.push({\r\n          path: '/rooms',\r\n          query: { search: this.searchQuery }\r\n        })\r\n      }\r\n    },\r\n    \r\n    handleLogout() {\r\n      localStorage.removeItem('token')\r\n      this.isAuthenticated = false\r\n      this.$router.push('/')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-layout {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-header {\r\n  background-color: white;\r\n  border-bottom: 1px solid #e5e7eb;\r\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 40;\r\n}\r\n\r\n.user-header__container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 4rem;\r\n}\r\n\r\n.user-header__left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-header__logo {\r\n  text-decoration: none;\r\n}\r\n\r\n.user-header__title {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #3b82f6;\r\n  margin: 0;\r\n}\r\n\r\n.user-header__nav {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-header__menu {\r\n  display: flex;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  gap: 2rem;\r\n}\r\n\r\n.user-header__menu-link {\r\n  color: #374151;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  padding: 0.5rem 0;\r\n  border-bottom: 2px solid transparent;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.user-header__menu-link:hover {\r\n  color: #3b82f6;\r\n}\r\n\r\n.user-header__menu-link--active {\r\n  color: #3b82f6;\r\n  border-bottom-color: #3b82f6;\r\n}\r\n\r\n.user-header__right {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.user-header__search {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f9fafb;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 0.5rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-header__search-input {\r\n  border: none;\r\n  background: none;\r\n  padding: 0.5rem 0.75rem;\r\n  width: 200px;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.user-header__search-input:focus {\r\n  outline: none;\r\n}\r\n\r\n.user-header__search-btn {\r\n  background: none;\r\n  border: none;\r\n  padding: 0.5rem 0.75rem;\r\n  cursor: pointer;\r\n  color: #6b7280;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.user-header__search-btn:hover {\r\n  color: #3b82f6;\r\n}\r\n\r\n.user-header__notifications {\r\n  position: relative;\r\n}\r\n\r\n.user-header__notification-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n  border-radius: 0.375rem;\r\n  position: relative;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.user-header__notification-btn:hover {\r\n  background-color: #f1f5f9;\r\n}\r\n\r\n.user-header__notification-badge {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  background-color: #ef4444;\r\n  color: white;\r\n  font-size: 0.75rem;\r\n  font-weight: 600;\r\n  padding: 0.125rem 0.375rem;\r\n  border-radius: 9999px;\r\n  min-width: 1.25rem;\r\n  text-align: center;\r\n}\r\n\r\n.user-header__user-menu {\r\n  position: relative;\r\n}\r\n\r\n.user-header__user-menu-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  background: none;\r\n  border: none;\r\n  padding: 0.5rem;\r\n  border-radius: 0.375rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.user-header__user-menu-btn:hover {\r\n  background-color: #f1f5f9;\r\n}\r\n\r\n.user-header__user-avatar {\r\n  font-size: 1.25rem;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background-color: #e2e8f0;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.user-header__user-name {\r\n  font-weight: 500;\r\n  color: #374151;\r\n}\r\n\r\n.user-header__user-arrow {\r\n  color: #6b7280;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.user-header__user-dropdown {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  background-color: white;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\r\n  min-width: 150px;\r\n  z-index: 10;\r\n  display: none;\r\n}\r\n\r\n.user-header__user-menu:hover .user-header__user-dropdown {\r\n  display: block;\r\n}\r\n\r\n.user-header__user-dropdown-item {\r\n  display: block;\r\n  padding: 0.75rem 1rem;\r\n  color: #374151;\r\n  text-decoration: none;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.user-header__user-dropdown-item:hover {\r\n  background-color: #f9fafb;\r\n}\r\n\r\n.user-header__auth {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.user-header__auth-btn {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.375rem;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.user-header__auth-btn--login {\r\n  color: #3b82f6;\r\n  border: 1px solid #3b82f6;\r\n}\r\n\r\n.user-header__auth-btn--login:hover {\r\n  background-color: #3b82f6;\r\n  color: white;\r\n}\r\n\r\n.user-header__auth-btn--register {\r\n  background-color: #3b82f6;\r\n  color: white;\r\n  border: 1px solid #3b82f6;\r\n}\r\n\r\n.user-header__auth-btn--register:hover {\r\n  background-color: #2563eb;\r\n  border-color: #2563eb;\r\n}\r\n\r\n.user-main {\r\n  flex: 1;\r\n}\r\n\r\n.user-footer {\r\n  background-color: #1f2937;\r\n  color: white;\r\n  margin-top: auto;\r\n}\r\n\r\n.user-footer__container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 3rem 1rem 1rem;\r\n}\r\n\r\n.user-footer__content {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 2rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.user-footer__title {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  margin: 0 0 1rem 0;\r\n  color: #3b82f6;\r\n}\r\n\r\n.user-footer__description {\r\n  color: #d1d5db;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n}\r\n\r\n.user-footer__subtitle {\r\n  font-size: 1.125rem;\r\n  font-weight: 600;\r\n  margin: 0 0 1rem 0;\r\n  color: #f9fafb;\r\n}\r\n\r\n.user-footer__links {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.user-footer__links li {\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.user-footer__link {\r\n  color: #d1d5db;\r\n  text-decoration: none;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.user-footer__link:hover {\r\n  color: #3b82f6;\r\n}\r\n\r\n.user-footer__contact p {\r\n  color: #d1d5db;\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.user-footer__bottom {\r\n  border-top: 1px solid #374151;\r\n  padding-top: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.user-footer__copyright {\r\n  color: #9ca3af;\r\n  margin: 0;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .user-header__container {\r\n    flex-wrap: wrap;\r\n    height: auto;\r\n    padding: 1rem;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .user-header__nav {\r\n    order: 3;\r\n    width: 100%;\r\n  }\r\n  \r\n  .user-header__menu {\r\n    justify-content: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .user-header__search {\r\n    order: 2;\r\n  }\r\n  \r\n  .user-header__search-input {\r\n    width: 150px;\r\n  }\r\n  \r\n  .user-footer__content {\r\n    grid-template-columns: 1fr;\r\n    text-align: center;\r\n  }\r\n}\r\n</style> ","import axios from 'axios'\r\n\r\n/**\r\n * API 클라이언트 인스턴스\r\n * @type {import('axios').AxiosInstance}\r\n */\r\nconst apiClient = axios.create({\r\n  baseURL: '/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\n// 요청 인터셉터 - 사용자 ID 헤더 추가\r\napiClient.interceptors.request.use(\r\n  /**\r\n   * 요청 설정 수정\r\n   * @param {import('axios').AxiosRequestConfig} config - axios 요청 설정\r\n   * @returns {import('axios').AxiosRequestConfig} 수정된 요청 설정\r\n   */\r\n  (config) => {\r\n    const userId = localStorage.getItem('userId')\r\n    if (userId) {\r\n      config.headers['X-User-Id'] = userId\r\n    }\r\n    return config\r\n  },\r\n  /**\r\n   * 요청 오류 처리\r\n   * @param {Error} error - 요청 오류\r\n   * @returns {Promise<never>} 거부된 Promise\r\n   */\r\n  (error) => {\r\n    console.error('Request interceptor error:', error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 응답 인터셉터 - 오류 처리\r\napiClient.interceptors.response.use(\r\n  /**\r\n   * 성공 응답 처리\r\n   * @param {import('axios').AxiosResponse} response - axios 응답 객체\r\n   * @returns {import('axios').AxiosResponse} 응답 객체\r\n   */\r\n  (response) => response,\r\n  /**\r\n   * 응답 오류 처리\r\n   * @param {import('axios').AxiosError} error - axios 오류 객체\r\n   * @returns {Promise<never>} 거부된 Promise\r\n   */\r\n  (error) => {\r\n    if (error.response) {\r\n      // 서버 응답이 있는 경우\r\n      console.error('API Error:', {\r\n        status: error.response.status,\r\n        data: error.response.data,\r\n        url: error.config?.url\r\n      })\r\n    } else if (error.request) {\r\n      // 요청은 했지만 응답이 없는 경우\r\n      console.error('Network Error:', error.message)\r\n    } else {\r\n      // 요청 설정 중 오류\r\n      console.error('Request Setup Error:', error.message)\r\n    }\r\n    \r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default apiClient ","import apiClient from '@/api/ApiClient';\r\n\r\n/**\r\n * Room API 클라이언트\r\n * 회의실 관리 API\r\n */\r\nexport const roomApiClient = {\r\n  /**\r\n   * 모든 회의실 목록 조회\r\n   * GET /rooms\r\n   * @returns {Promise<Array>} 회의실 목록\r\n   */\r\n  getAllRooms: () => apiClient.get('/rooms'),\r\n\r\n  /**\r\n   * ID로 회의실 조회\r\n   * GET /rooms/{id}\r\n   * @param {number} id - 회의실 ID\r\n   * @returns {Promise<Object>} 회의실 정보\r\n   */\r\n  getRoomById: (id) => apiClient.get(`/rooms/${id}`),\r\n\r\n  /**\r\n   * 회의실 생성\r\n   * POST /rooms\r\n   * @param {Object} roomData - 회의실 생성 데이터\r\n   * @param {string} roomData.name - 회의실 이름\r\n   * @param {string} roomData.location - 위치\r\n   * @param {number} roomData.capacity - 수용 인원\r\n   * @param {string} roomData.description - 설명\r\n   * @returns {Promise<Object>} 생성된 회의실 정보\r\n   */\r\n  createRoom: (roomData) => apiClient.post('/rooms', roomData),\r\n\r\n  /**\r\n   * 회의실 수정\r\n   * PUT /rooms/{id}\r\n   * @param {number} id - 회의실 ID\r\n   * @param {Object} roomData - 수정할 회의실 데이터\r\n   * @returns {Promise<Object>} 수정된 회의실 정보\r\n   */\r\n  updateRoom: (id, roomData) => apiClient.put(`/rooms/${id}`, roomData),\r\n\r\n  /**\r\n   * 회의실 삭제\r\n   * DELETE /rooms/{id}\r\n   * @param {number} id - 회의실 ID\r\n   * @returns {Promise<void>}\r\n   */\r\n  deleteRoom: (id) => apiClient.delete(`/rooms/${id}`),\r\n\r\n  /**\r\n   * 용량별 회의실 검색\r\n   * GET /rooms/capacity/{minCapacity}\r\n   * @param {number} minCapacity - 최소 수용 인원\r\n   * @returns {Promise<Array>} 조건에 맞는 회의실 목록\r\n   */\r\n  getRoomsByCapacity: (minCapacity) => apiClient.get(`/rooms/capacity/${minCapacity}`),\r\n\r\n  /**\r\n   * 위치별 회의실 검색\r\n   * GET /rooms/location/{location}\r\n   * @param {string} location - 위치\r\n   * @returns {Promise<Array>} 조건에 맞는 회의실 목록\r\n   */\r\n  getRoomsByLocation: (location) => apiClient.get(`/rooms/location/${location}`),\r\n\r\n  /**\r\n   * 회의실 존재 여부 확인\r\n   * GET /rooms/{id}/exists\r\n   * @param {number} id - 회의실 ID\r\n   * @returns {Promise<boolean>} 존재 여부\r\n   */\r\n  existsRoom: (id) => apiClient.get(`/rooms/${id}/exists`),\r\n\r\n  /**\r\n   * 이용 가능한 회의실 조회\r\n   * GET /rooms/available\r\n   * @returns {Promise<Array>} 이용 가능한 회의실 목록\r\n   */\r\n  getAvailableRooms: () => apiClient.get('/rooms/available')\r\n}; \r\n\r\n","import apiClient from '@/api/ApiClient';\r\n\r\n/**\r\n * Rent API 클라이언트\r\n * 예약 관리 API\r\n */\r\nexport const rentApiClient = {\r\n  /**\r\n   * 모든 예약 목록 조회\r\n   * GET /rents\r\n   * @returns {Promise<Array>} 예약 목록\r\n   */\r\n  getAllRents: () => apiClient.get('/rents'),\r\n\r\n  /**\r\n   * ID로 예약 조회\r\n   * GET /rents/{id}\r\n   * @param {number} id - 예약 ID\r\n   * @returns {Promise<Object>} 예약 정보\r\n   */\r\n  getRentById: (id) => apiClient.get(`/rents/${id}`),\r\n\r\n  /**\r\n   * 예약 생성\r\n   * POST /rents\r\n   * @param {Object} rentData - 예약 생성 데이터\r\n   * @param {string} rentData.startTime - 시작 시간 (ISO 8601)\r\n   * @param {string} rentData.endTime - 종료 시간 (ISO 8601)\r\n   * @param {string} rentData.purpose - 예약 목적\r\n   * @param {string} rentData.description - 설명\r\n   * @param {Array<number>} rentData.roomIds - 회의실 ID 목록\r\n   * @param {Array<number>} rentData.inviteeIds - 초대할 사용자 ID 목록\r\n   * @returns {Promise<Object>} 생성된 예약 정보\r\n   */\r\n  createRent: (rentData) => apiClient.post('/rents', rentData),\r\n\r\n  /**\r\n   * 예약 수정\r\n   * PUT /rents/{id}\r\n   * @param {number} id - 예약 ID\r\n   * @param {Object} rentData - 수정할 예약 데이터\r\n   * @returns {Promise<Object>} 수정된 예약 정보\r\n   */\r\n  updateRent: (id, rentData) => apiClient.put(`/rents/${id}`, rentData),\r\n\r\n  /**\r\n   * 예약 삭제\r\n   * DELETE /rents/{id}\r\n   * @param {number} id - 예약 ID\r\n   * @returns {Promise<void>}\r\n   */\r\n  deleteRent: (id) => apiClient.delete(`/rents/${id}`),\r\n\r\n  /**\r\n   * 생성자별 예약 조회\r\n   * GET /rents/creator/{creatorId}\r\n   * @param {number} creatorId - 생성자 ID\r\n   * @returns {Promise<Array>} 조건에 맞는 예약 목록\r\n   */\r\n  getRentsByCreator: (creatorId) => apiClient.get(`/rents/creator/${creatorId}`),\r\n\r\n  /**\r\n   * 날짜 범위별 예약 조회\r\n   * GET /rents/date-range\r\n   * @param {string} startDate - 시작 날짜 (ISO 8601)\r\n   * @param {string} endDate - 종료 날짜 (ISO 8601)\r\n   * @returns {Promise<Array>} 조건에 맞는 예약 목록\r\n   */\r\n  getRentsByDateRange: (startDate, endDate) => \r\n    apiClient.get('/rents/date-range', { params: { startDate, endDate } }),\r\n\r\n  /**\r\n   * 예정된 예약 조회\r\n   * GET /rents/upcoming\r\n   * @param {string} fromTime - 기준 시간 (ISO 8601)\r\n   * @returns {Promise<Array>} 예정된 예약 목록\r\n   */\r\n  getUpcomingRents: (fromTime) => \r\n    apiClient.get('/rents/upcoming', { params: { fromTime } }),\r\n\r\n  /**\r\n   * 목적별 예약 검색\r\n   * GET /rents/search\r\n   * @param {string} purpose - 검색할 목적\r\n   * @returns {Promise<Array>} 조건에 맞는 예약 목록\r\n   */\r\n  searchRentsByPurpose: (purpose) => \r\n    apiClient.get('/rents/search', { params: { purpose } }),\r\n\r\n  /**\r\n   * 회의실별 예약 조회\r\n   * GET /rents/room/{roomId}\r\n   * @param {number} roomId - 회의실 ID\r\n   * @returns {Promise<Array>} 조건에 맞는 예약 목록\r\n   */\r\n  getRentsByRoom: (roomId) => apiClient.get(`/rents/room/${roomId}`),\r\n\r\n  /**\r\n   * 예약 존재 여부 확인\r\n   * GET /rents/{id}/exists\r\n   * @param {number} id - 예약 ID\r\n   * @returns {Promise<boolean>} 존재 여부\r\n   */\r\n  existsRent: (id) => apiClient.get(`/rents/${id}/exists`),\r\n\r\n  /**\r\n   * 시간 충돌 확인\r\n   * POST /rents/check-conflict\r\n   * @param {Object} conflictData - 충돌 확인 데이터\r\n   * @param {Array<number>} conflictData.roomIds - 회의실 ID 목록\r\n   * @param {string} conflictData.startTime - 시작 시간\r\n   * @param {string} conflictData.endTime - 종료 시간\r\n   * @param {number} conflictData.excludeRentId - 제외할 예약 ID (선택)\r\n   * @returns {Promise<boolean>} 충돌 여부\r\n   */\r\n  checkTimeConflict: (conflictData) => apiClient.post('/rents/check-conflict', conflictData),\r\n\r\n  /**\r\n   * 내 최근 예약 조회\r\n   * GET /rents/recent\r\n   * @returns {Promise<Array>} 최근 예약 목록\r\n   */\r\n  getRecentRents: (userId) => apiClient.get(`/rents/recent?userId=${userId}`)\r\n}; ","import apiClient from '@/api/ApiClient';\r\n\r\n/**\r\n * RoomRent API 클라이언트\r\n * 회의실-예약 연결 관리 API\r\n */\r\nexport const roomRentApiClient = {\r\n  /**\r\n   * 모든 회의실-예약 연결 목록 조회\r\n   * GET /api/room-rents\r\n   * @returns {Promise<Array>} 회의실-예약 연결 목록\r\n   */\r\n  getAllRoomRents: () => apiClient.get('/api/room-rents'),\r\n\r\n  /**\r\n   * ID로 회의실-예약 연결 조회\r\n   * GET /api/room-rents/{id}\r\n   * @param {number} id - 회의실-예약 연결 ID\r\n   * @returns {Promise<Object>} 회의실-예약 연결 정보\r\n   */\r\n  getRoomRentById: (id) => apiClient.get(`/api/room-rents/${id}`),\r\n\r\n  /**\r\n   * 회의실-예약 연결 생성\r\n   * POST /api/room-rents\r\n   * @param {Object} roomRentData - 회의실-예약 연결 생성 데이터\r\n   * @param {number} roomRentData.roomId - 회의실 ID\r\n   * @param {number} roomRentData.rentId - 예약 ID\r\n   * @returns {Promise<Object>} 생성된 회의실-예약 연결 정보\r\n   */\r\n  createRoomRent: (roomRentData) => apiClient.post('/api/room-rents', roomRentData),\r\n\r\n  /**\r\n   * 회의실-예약 연결 수정\r\n   * PUT /api/room-rents/{id}\r\n   * @param {number} id - 회의실-예약 연결 ID\r\n   * @param {Object} roomRentData - 수정할 데이터\r\n   * @returns {Promise<Object>} 수정된 회의실-예약 연결 정보\r\n   */\r\n  updateRoomRent: (id, roomRentData) => apiClient.put(`/api/room-rents/${id}`, roomRentData),\r\n\r\n  /**\r\n   * 회의실-예약 연결 삭제\r\n   * DELETE /api/room-rents/{id}\r\n   * @param {number} id - 회의실-예약 연결 ID\r\n   * @returns {Promise<void>}\r\n   */\r\n  deleteRoomRent: (id) => apiClient.delete(`/api/room-rents/${id}`),\r\n\r\n  /**\r\n   * 예약별 회의실-예약 연결 조회\r\n   * GET /api/room-rents/rent/{rentId}\r\n   * @param {number} rentId - 예약 ID\r\n   * @returns {Promise<Array>} 조건에 맞는 회의실-예약 연결 목록\r\n   */\r\n  getRoomRentsByRent: (rentId) => apiClient.get(`/api/room-rents/rent/${rentId}`),\r\n\r\n  /**\r\n   * 회의실별 회의실-예약 연결 조회\r\n   * GET /api/room-rents/room/{roomId}\r\n   * @param {number} roomId - 회의실 ID\r\n   * @returns {Promise<Array>} 조건에 맞는 회의실-예약 연결 목록\r\n   */\r\n  getRoomRentsByRoom: (roomId) => apiClient.get(`/api/room-rents/room/${roomId}`),\r\n\r\n  /**\r\n   * 특정 회의실과 예약의 연결 조회\r\n   * GET /api/room-rents/find\r\n   * @param {number} rentId - 예약 ID\r\n   * @param {number} roomId - 회의실 ID\r\n   * @returns {Promise<Object>} 회의실-예약 연결 정보\r\n   */\r\n  findByRentAndRoom: (rentId, roomId) => \r\n    apiClient.get('/api/room-rents/find', { params: { rentId, roomId } }),\r\n\r\n  /**\r\n   * 회의실-예약 연결 존재 여부 확인\r\n   * GET /api/room-rents/{id}/exists\r\n   * @param {number} id - 회의실-예약 연결 ID\r\n   * @returns {Promise<boolean>} 존재 여부\r\n   */\r\n  existsRoomRent: (id) => apiClient.get(`/api/room-rents/${id}/exists`),\r\n\r\n  /**\r\n   * 특정 회의실과 예약의 연결 존재 여부 확인\r\n   * GET /api/room-rents/exists\r\n   * @param {number} rentId - 예약 ID\r\n   * @param {number} roomId - 회의실 ID\r\n   * @returns {Promise<boolean>} 존재 여부\r\n   */\r\n  existsByRentAndRoom: (rentId, roomId) => \r\n    apiClient.get('/api/room-rents/exists', { params: { rentId, roomId } })\r\n}; ","<template>\r\n  <UserLayout>\r\n    <!-- Hero Section - 미니멀한 디자인 -->\r\n    <section class=\"hero\">\r\n      <div class=\"hero__container\">\r\n        <div class=\"hero__content\">\r\n          <h1 class=\"hero__title\">\r\n            스마트한 회의실 예약\r\n          </h1>\r\n          <p class=\"hero__subtitle\">\r\n            간단하고 빠른 회의실 예약으로 더 효율적인 업무 환경을 만들어보세요\r\n          </p>\r\n          <div class=\"hero__actions\">\r\n            <router-link to=\"/rooms\" class=\"hero__cta hero__cta--primary\">\r\n              회의실 둘러보기\r\n            </router-link>\r\n            <router-link to=\"/reservations/create\" class=\"hero__cta hero__cta--secondary\">\r\n              바로 예약하기\r\n            </router-link>\r\n          </div>\r\n        </div>\r\n        <div class=\"hero__visual\">\r\n          <div class=\"hero__card\">\r\n            <div class=\"card-icon\">🏢</div>\r\n            <h3>회의실 A</h3>\r\n            <p>8명 · 3층 · 프로젝터</p>\r\n            <div class=\"card-status available\">예약 가능</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Quick Stats - 간결한 통계 -->\r\n    <section class=\"quick-stats\">\r\n      <div class=\"quick-stats__container\">\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-item__value\">{{ stats.totalRooms }}</div>\r\n          <div class=\"stat-item__label\">회의실</div>\r\n        </div>\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-item__value\">{{ stats.todayReservations }}</div>\r\n          <div class=\"stat-item__label\">오늘 예약</div>\r\n        </div>\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-item__value\">{{ stats.availableNow }}</div>\r\n          <div class=\"stat-item__label\">현재 이용 가능</div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- How It Works - 3단계 설명 -->\r\n    <section class=\"how-it-works\">\r\n      <div class=\"how-it-works__container\">\r\n        <h2 class=\"section-title\">간단한 3단계</h2>\r\n        <div class=\"steps\">\r\n          <div class=\"step\">\r\n            <div class=\"step__number\">1</div>\r\n            <h3 class=\"step__title\">회의실 선택</h3>\r\n            <p class=\"step__description\">\r\n              필요한 인원과 시설에 맞는<br>회의실을 선택하세요\r\n            </p>\r\n          </div>\r\n          <div class=\"step\">\r\n            <div class=\"step__number\">2</div>\r\n            <h3 class=\"step__title\">시간 예약</h3>\r\n            <p class=\"step__description\">\r\n              원하는 날짜와 시간을<br>선택하여 예약하세요\r\n            </p>\r\n          </div>\r\n          <div class=\"step\">\r\n            <div class=\"step__number\">3</div>\r\n            <h3 class=\"step__title\">회의 시작</h3>\r\n            <p class=\"step__description\">\r\n              예약된 시간에 회의실을<br>이용하세요\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Available Rooms - 현재 이용 가능한 회의실 -->\r\n    <section class=\"available-rooms\" v-if=\"availableRooms.length > 0\">\r\n      <div class=\"available-rooms__container\">\r\n        <div class=\"section-header\">\r\n          <h2 class=\"section-title\">지금 이용 가능한 회의실</h2>\r\n          <router-link to=\"/rooms\" class=\"section-link\">\r\n            전체 보기 →\r\n          </router-link>\r\n        </div>\r\n        <div class=\"rooms-grid\">\r\n          <div \r\n            v-for=\"room in availableRooms.slice(0, 3)\" \r\n            :key=\"room.id\"\r\n            class=\"room-card\"\r\n            @click=\"$router.push(`/rooms/${room.id}`)\"\r\n          >\r\n            <div class=\"room-card__header\">\r\n              <h3 class=\"room-card__name\">{{ room.name }}</h3>\r\n              <div class=\"room-card__status available\">이용 가능</div>\r\n            </div>\r\n            <div class=\"room-card__details\">\r\n              <span class=\"detail-item\">\r\n                <span class=\"detail-icon\">👥</span>\r\n                {{ room.capacity }}명\r\n              </span>\r\n              <span class=\"detail-item\">\r\n                <span class=\"detail-icon\">📍</span>\r\n                {{ room.location }}\r\n              </span>\r\n            </div>\r\n            <button class=\"room-card__cta\" @click.stop=\"handleQuickReserve(room)\">\r\n              빠른 예약\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Recent Reservations - 내 최근 예약 -->\r\n    <section class=\"recent-reservations\" v-if=\"recentReservations.length > 0\">\r\n      <div class=\"recent-reservations__container\">\r\n        <div class=\"section-header\">\r\n          <h2 class=\"section-title\">내 예약</h2>\r\n          <router-link to=\"/reservations\" class=\"section-link\">\r\n            전체 보기 →\r\n          </router-link>\r\n        </div>\r\n        <div class=\"reservations-list\">\r\n          <div \r\n            v-for=\"reservation in recentReservations.slice(0, 3)\" \r\n            :key=\"reservation.id\"\r\n            class=\"reservation-item\"\r\n            @click=\"$router.push(`/reservations/${reservation.id}`)\"\r\n          >\r\n            <div class=\"reservation-item__date\">\r\n              <div class=\"date-day\">{{ formatDay(reservation.startTime) }}</div>\r\n              <div class=\"date-month\">{{ formatMonth(reservation.startTime) }}</div>\r\n            </div>\r\n            <div class=\"reservation-item__content\">\r\n              <h4 class=\"reservation-title\">{{ reservation.purpose }}</h4>\r\n              <p class=\"reservation-details\">\r\n                {{ reservation.roomName }} · \r\n                {{ formatTime(reservation.startTime) }} - {{ formatTime(reservation.endTime) }}\r\n              </p>\r\n            </div>\r\n            <div class=\"reservation-item__status\">\r\n              <span :class=\"['status-badge', getStatusClass(reservation.status)]\">\r\n                {{ getStatusText(reservation.status) }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- CTA Section - 간단한 액션 -->\r\n    <section class=\"cta-section\">\r\n      <div class=\"cta-section__container\">\r\n        <h2 class=\"cta-section__title\">회의실 예약을 시작하세요</h2>\r\n        <p class=\"cta-section__description\">\r\n          더 효율적인 업무를 위한 첫 걸음\r\n        </p>\r\n        <router-link to=\"/reservations/create\" class=\"cta-section__button\">\r\n          지금 예약하기\r\n        </router-link>\r\n      </div>\r\n    </section>\r\n  </UserLayout>\r\n</template>\r\n\r\n<script>\r\nimport UserLayout from '@/layouts/UserLayout.vue'\r\nimport { roomApiClient, rentApiClient, roomRentApiClient } from '@/api'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  components: {\r\n    UserLayout\r\n  },\r\n  data() {\r\n    return {\r\n      stats: {\r\n        totalRooms: 0,\r\n        todayReservations: 0,\r\n        availableNow: 0\r\n      },\r\n      availableRooms: [],\r\n      recentReservations: [],\r\n      loading: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadData()\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      this.loading = true\r\n      \r\n      try {\r\n        await Promise.all([\r\n          this.loadStats(),\r\n          this.loadAvailableRooms(),\r\n          this.loadRecentReservations()\r\n        ])\r\n      } catch (err) {\r\n        console.error('Failed to load home data:', err)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    async loadStats() {\r\n      try {\r\n        // 실제로는 별도 API 엔드포인트에서 통계 데이터를 가져옴\r\n        const roomsResponse = await roomApiClient.getAllRooms()\r\n        this.stats.totalRooms = roomsResponse.data.length\r\n        \r\n        const today = new Date().toISOString().split('T')[0]\r\n        const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]\r\n        const reservationsResponse = await rentApiClient.getRentsByDateRange(today, tomorrow)\r\n        this.stats.todayReservations = reservationsResponse.data.length\r\n        \r\n        // 현재 시간 기준으로 이용 가능한 회의실 계산\r\n        this.stats.availableNow = Math.max(0, this.stats.totalRooms - this.stats.todayReservations)\r\n      } catch (err) {\r\n        console.error('Failed to load stats:', err)\r\n        // 기본값 설정\r\n        this.stats = {\r\n          totalRooms: 12,\r\n          todayReservations: 8,\r\n          availableNow: 4\r\n        }\r\n      }\r\n    },\r\n    \r\n    async loadAvailableRooms() {\r\n      try {\r\n        const response = await roomRentApiClient.getAvailableRooms()\r\n        this.availableRooms = response.data || []\r\n      } catch (err) {\r\n        console.error('Failed to load available rooms:', err)\r\n        // 더미 데이터\r\n        this.availableRooms = [\r\n          { id: 1, name: '회의실 A', capacity: 8, location: '3층' },\r\n          { id: 2, name: '회의실 B', capacity: 12, location: '4층' },\r\n          { id: 3, name: '회의실 C', capacity: 6, location: '2층' }\r\n        ]\r\n      }\r\n    },\r\n    \r\n    async loadRecentReservations() {\r\n      try {\r\n        // 로그인한 사용자만 최근 예약을 로드\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.recentReservations = [];\r\n          return;\r\n        }\r\n        \r\n        // 사용자 ID 가져오기\r\n        let userId;\r\n        try {\r\n          userId = this.$store?.state?.user?.id || localStorage.getItem('userId');\r\n        } catch {\r\n          userId = null;\r\n        }\r\n        \r\n        if (!userId) {\r\n          this.recentReservations = [];\r\n          return;\r\n        }\r\n        \r\n        const response = await rentApiClient.getRecentRents(userId)\r\n        this.recentReservations = response.data || []\r\n      } catch (err) {\r\n        console.error('Failed to load recent reservations:', err)\r\n        this.recentReservations = []\r\n      }\r\n    },\r\n    \r\n    formatDay(dateString) {\r\n      return new Date(dateString).getDate()\r\n    },\r\n    \r\n    formatMonth(dateString) {\r\n      const months = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월']\r\n      return months[new Date(dateString).getMonth()]\r\n    },\r\n    \r\n    formatTime(dateString) {\r\n      return new Date(dateString).toLocaleTimeString('ko-KR', { \r\n        hour: '2-digit', \r\n        minute: '2-digit' \r\n      })\r\n    },\r\n    \r\n    getStatusClass(status) {\r\n      const classes = {\r\n        PENDING: 'pending',\r\n        CONFIRMED: 'confirmed',\r\n        CANCELLED: 'cancelled',\r\n        COMPLETED: 'completed'\r\n      }\r\n      return classes[status] || ''\r\n    },\r\n    \r\n    getStatusText(status) {\r\n      const texts = {\r\n        PENDING: '대기중',\r\n        CONFIRMED: '확정',\r\n        CANCELLED: '취소',\r\n        COMPLETED: '완료'\r\n      }\r\n      return texts[status] || status\r\n    },\r\n    \r\n    handleQuickReserve(room) {\r\n      this.$router.push({\r\n        path: '/reservations/create',\r\n        query: { roomId: room.id }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/styles/pages/home.css';\r\n</style> ","import { createRouter, createWebHistory } from 'vue-router'\r\nimport Home from '@/pages/Home.vue'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home\r\n  },\r\n  {\r\n    path: '/rooms',\r\n    name: 'RoomList',\r\n    component: () => import('@/pages/rooms/index.vue')\r\n  },\r\n  {\r\n    path: '/rooms/create',\r\n    name: 'RoomCreate',\r\n    component: () => import('@/pages/rooms/Create.vue')\r\n  },\r\n  {\r\n    path: '/rooms/:id',\r\n    name: 'RoomDetail',\r\n    component: () => import('@/pages/rooms/Detail.vue')\r\n  },\r\n  {\r\n    path: '/rooms/:id/edit',\r\n    name: 'RoomEdit',\r\n    component: () => import('@/pages/rooms/Edit.vue')\r\n  },\r\n  {\r\n    path: '/reservations',\r\n    name: 'ReservationList',\r\n    component: () => import('@/pages/reservations/index.vue')\r\n  },\r\n  {\r\n    path: '/reservations/create',\r\n    name: 'ReservationCreate',\r\n    component: () => import('@/pages/reservations/Create.vue')\r\n  },\r\n  {\r\n    path: '/reservations/:id',\r\n    name: 'ReservationDetail',\r\n    component: () => import('@/pages/reservations/Detail.vue')\r\n  },\r\n  {\r\n    path: '/users',\r\n    name: 'UserList',\r\n    component: () => import('@/pages/users/index.vue')\r\n  },\r\n  // 관리자 페이지들\r\n  {\r\n    path: '/admin',\r\n    name: 'AdminDashboard',\r\n    component: () => import('@/pages/admin/index.vue'),\r\n    meta: { requiresAuth: true, requiresAdmin: true }\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('@/pages/auth/Login.vue')\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: () => import('@/pages/auth/Register.vue')\r\n  },\r\n  {\r\n    path: '/:pathMatch(.*)*',\r\n    name: 'NotFound',\r\n    component: () => import('@/pages/NotFound.vue')\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n  scrollBehavior(to, from, savedPosition) {\r\n    if (savedPosition) {\r\n      return savedPosition\r\n    } else {\r\n      return { top: 0 }\r\n    }\r\n  }\r\n})\r\n\r\n// 네비게이션 가드\r\nrouter.beforeEach((to, from, next) => {\r\n  // 인증이 필요한 페이지 체크\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\r\n  const requiresAdmin = to.matched.some(record => record.meta.requiresAdmin)\r\n  const isAuthenticated = localStorage.getItem('token') // 실제로는 더 복잡한 인증 로직 필요\r\n  const isAdmin = localStorage.getItem('userRole') === 'ADMIN' // 실제로는 더 복잡한 권한 체크 필요\r\n  \r\n  if (requiresAuth && !isAuthenticated) {\r\n    next('/login')\r\n  } else if (requiresAdmin && !isAdmin) {\r\n    next('/') // 관리자가 아닌 경우 홈으로 리다이렉트\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router ","/**\r\n * 클릭 외부 감지 디렉티브\r\n * 요소 외부를 클릭했을 때 이벤트를 발생시킵니다.\r\n */\r\n\r\nexport const clickOutside = {\r\n  mounted(el, binding) {\r\n    el._clickOutside = (event) => {\r\n      // 요소 내부 클릭인지 확인\r\n      if (!(el === event.target || el.contains(event.target))) {\r\n        // 바인딩된 함수 호출\r\n        if (typeof binding.value === 'function') {\r\n          binding.value(event)\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 이벤트 리스너 등록\r\n    document.addEventListener('click', el._clickOutside)\r\n  },\r\n  \r\n  unmounted(el) {\r\n    // 이벤트 리스너 제거\r\n    document.removeEventListener('click', el._clickOutside)\r\n    delete el._clickOutside\r\n  }\r\n}\r\n\r\nexport default clickOutside ","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport { createPinia } from 'pinia'\r\n\r\n// CSS 스타일 import\r\nimport './styles/index.css'\r\n\r\n// 디렉티브 import\r\nimport clickOutside from './directives/clickOutside'\r\n\r\nconst app = createApp(App)\r\n\r\n// Pinia 스토어 설정\r\nconst pinia = createPinia()\r\napp.use(pinia)\r\n\r\n// 라우터 설정\r\napp.use(router)\r\n\r\n// 전역 디렉티브 등록\r\napp.directive('click-outside', clickOutside)\r\n\r\n// 전역 속성 설정\r\napp.config.globalProperties.$formatDate = (date, format = 'datetime') => {\r\n  // 날짜 포맷팅 유틸리티\r\n  const d = new Date(date)\r\n  if (format === 'date') {\r\n    return d.toLocaleDateString('ko-KR')\r\n  } else if (format === 'time') {\r\n    return d.toLocaleTimeString('ko-KR', { hour: '2-digit', minute: '2-digit' })\r\n  } else {\r\n    return d.toLocaleString('ko-KR')\r\n  }\r\n}\r\n\r\napp.mount('#app') "],"file":"assets/index-DLxo1fU2.js"}